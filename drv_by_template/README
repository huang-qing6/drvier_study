小结
    从gpio通用模板来进行物理硬件的操控学习，想比较与本科的51单片机编程，
    8位并行 + keil明显比如今arm linux开发难度小，但是战斗爽!


    整体思路
    1.由于是字符串设备，根据万物皆文件定理，对于上层APP就是考虑open，read，
    ioctl，close等操作；

    open("驱动路径", flag);

    2.编写模块，通过module_init， module_exit进行驱动内核注册，在init和exit中
    对驱动的可使用设备、中断上升下降沿触发、定时器初始化等一系列预处理；exit里则
    把该关闭的全关完；

    3.加载初始化完毕后，利用file_operation内核注册驱动，如将上层read对接到对应
    设备的xxx_read函数实现对物理硬件引脚使用、中断使用、定时器使用等

    tips:
        gpio的输入输出的设置
        阅读文档理解高低电平含义，一个传输完整周期如何利用时间记录每个节点，计算
        时间进行“翻译”成数据以及正确校验结果进行输出